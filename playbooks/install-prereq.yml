---

- name: Force unregister before register
  redhat_subscription:
    state: absent
  ignore_errors: true

- name: register node with subscription-manager
  redhat_subscription: state=present username="{{rhn_user_name}}" password="{{rhn_password}}" autosubscribe=false
  register: task_result
  until: task_result | succeeded
  retries: 10
  delay: 5

- name: attach node to subscription pool
  command: subscription-manager attach --pool {{pool_id}}
  register: task_result
  until: task_result.rc == 0
  retries: 10
  delay: 1
  ignore_errors: yes

- name: Enable only required repositories with Subscription Manager
  command: subscription-manager repos --disable="*" --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-ose-3.4-rpms"

- name: Run yum update
  yum: name=* state=latest

- name: "Install pre-requisite packages"
  yum: state=present name={{ item }}
  with_items:
  - wget
  - vim-enhanced
  - net-tools
  - bind-utils
  - git
  - iptables
  - bridge-utils 
  - atomic-openshift-utils

- name: Install Docker
  yum: name=docker state=installed update_cache=yes
  register: dockerInstalled
  notify:
  - Stop Docker
  - Clean Docker Data

- meta: flush_handlers

- name: Insecure Registry Config 
  lineinfile: dest=/etc/sysconfig/docker  regexp="^OPTIONS" line=OPTIONS='--selinux-enabled --insecure-registry 172.30.0.0/16 --log-opt max-size=1M --log-opt max-file=3' backup=yes backrefs=yes state=present
  register: dockerConfigUpdated

- name: Create Docker Storage Config
  blockinfile: 
    dest: /etc/sysconfig/docker-storage-setup
    create: yes
    content: |
      DEVS=/dev/{{docker_storage_mount}}
      VG=docker-vg
  register: dockerStorageConfigFileCreated

- meta: flush_handlers

- name: Check if LVS exists
  shell: lvs | grep docker-pool | awk '{ print $1}'
  register: dockerpoolLVS

- name: Docker Storage Setup 
  when: dockerpoolLVS.stdout != "docker-pool" and dockerStorageConfigFileCreated|success
  command: docker-storage-setup 
  register: dockerStorageSetupComplete 

- name: Start Docker
  service: name=docker state=started enabled=yes
 
- meta: flush_handlers
